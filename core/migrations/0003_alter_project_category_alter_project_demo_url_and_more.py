# Generated by Django 5.2.5 on 2025-09-15 12:16

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0002_alter_contactmessage_options_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="project",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.projectcategory",
                verbose_name="Categoría",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="demo_url",
            field=models.URLField(blank=True, null=True, verbose_name="URL de Demo"),
        ),
        migrations.AlterField(
            model_name="project",
            name="description",
            field=models.TextField(verbose_name="Descripción"),
        ),
        migrations.AlterField(
            model_name="project",
            name="detailed_description",
            field=models.TextField(
                blank=True,
                help_text="Descripción detallada opcional",
                verbose_name="Descripción detallada",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="end_date",
            field=models.DateField(blank=True, null=True, verbose_name="Fecha de fin"),
        ),
        migrations.AlterField(
            model_name="project",
            name="featured_image",
            field=models.URLField(
                blank=True,
                help_text="URL de imagen destacada del proyecto",
                null=True,
                verbose_name="Imagen destacada",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="github_url",
            field=models.URLField(blank=True, null=True, verbose_name="URL de GitHub"),
        ),
        migrations.AlterField(
            model_name="project",
            name="start_date",
            field=models.DateField(blank=True, null=True, verbose_name="Fecha de inicio"),
        ),
        migrations.AlterField(
            model_name="project",
            name="status",
            field=models.CharField(
                choices=[
                    ("active", "Activo"),
                    ("completed", "Completado"),
                    ("archived", "Archivado"),
                    ("in_progress", "En Desarrollo"),
                ],
                default="completed",
                max_length=20,
                verbose_name="Estado",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="technologies",
            field=models.ManyToManyField(
                blank=True,
                help_text="Tecnologías utilizadas",
                to="core.skill",
                verbose_name="Tecnologías",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="title",
            field=models.CharField(max_length=200, verbose_name="Título"),
        ),
        migrations.AlterField(
            model_name="projectcategory",
            name="color",
            field=models.CharField(
                default="#3B82F6",
                help_text="Color hex para la categoría",
                max_length=7,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Debe ser un color hex válido (ej: #3B82F6)",
                        regex="^#[0-9A-Fa-f]{6}$",
                    )
                ],
                verbose_name="Color",
            ),
        ),
        migrations.AlterField(
            model_name="projectcategory",
            name="description",
            field=models.TextField(blank=True, verbose_name="Descripción"),
        ),
        migrations.AlterField(
            model_name="projectcategory",
            name="name",
            field=models.CharField(max_length=100, unique=True, verbose_name="Nombre"),
        ),
        migrations.AlterField(
            model_name="skill",
            name="category",
            field=models.CharField(
                choices=[
                    ("language", "Lenguaje de Programación"),
                    ("framework", "Framework"),
                    ("database", "Base de Datos"),
                    ("tool", "Herramienta"),
                    ("cloud", "Cloud/DevOps"),
                ],
                default="tool",
                max_length=50,
                verbose_name="Categoría",
            ),
        ),
        migrations.AlterField(
            model_name="skill",
            name="name",
            field=models.CharField(max_length=100, unique=True, verbose_name="Nombre"),
        ),
        migrations.AlterField(
            model_name="skill",
            name="proficiency_level",
            field=models.IntegerField(
                choices=[
                    (1, "Básico"),
                    (2, "Intermedio"),
                    (3, "Avanzado"),
                    (4, "Experto"),
                ],
                default=3,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(4),
                ],
                verbose_name="Nivel de competencia",
            ),
        ),
        migrations.AddConstraint(
            model_name="project",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("start_date__isnull", True),
                    ("end_date__isnull", True),
                    ("end_date__gte", models.F("start_date")),
                    _connector="OR",
                ),
                name="valid_project_dates",
            ),
        ),
        migrations.AddConstraint(
            model_name="skill",
            constraint=models.CheckConstraint(
                condition=models.Q(("proficiency_level__gte", 1), ("proficiency_level__lte", 4)),
                name="valid_proficiency_level",
            ),
        ),
        migrations.AddConstraint(
            model_name="skill",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("years_experience__isnull", True),
                    ("years_experience__gte", 0),
                    _connector="OR",
                ),
                name="valid_years_experience",
            ),
        ),
    ]
